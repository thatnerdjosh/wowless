load("@bazel_skylib//rules:expand_template.bzl", "expand_template")

cc_binary(
    name = "puclua",
    visibility = ["//visibility:public"],
    srcs = ["src/lua.c"],
    deps = [":liblua"],
)

cc_library(
    name = "liblua",
    visibility = ["//visibility:public"],
    srcs = [
        ":luaconf.h",
        "src/lapi.c",
        "src/lapi.h",
        "src/lauxlib.h",
        "src/lauxlib.c",
        "src/lbaselib.c",
        "src/lcode.c",
        "src/lcode.h",
        "src/ldblib.c",
        "src/ldebug.c",
        "src/ldebug.h",
        "src/ldo.c",
        "src/ldo.h",
        "src/ldump.c",
        "src/lfunc.c",
        "src/lfunc.h",
        "src/lgc.c",
        "src/lgc.h",
        "src/linit.c",
        "src/liolib.c",
        "src/llex.c",
        "src/llex.h",
        "src/llimits.h",
        "src/lmathlib.c",
        "src/lmem.c",
        "src/lmem.h",
        "src/loadlib.c",
        "src/lobject.c",
        "src/lobject.h",
        "src/lopcodes.c",
        "src/lopcodes.h",
        "src/loslib.c",
        "src/lparser.c",
        "src/lparser.h",
        "src/lstate.c",
        "src/lstate.h",
        "src/lstring.c",
        "src/lstring.h",
        "src/lstrlib.c",
        "src/ltable.c",
        "src/ltable.h",
        "src/ltablib.c",
        "src/ltm.c",
        "src/ltm.h",
        "src/lua.h",
        "src/lualib.h",
        "src/lundump.c",
        "src/lundump.h",
        "src/lvm.c",
        "src/lvm.h",
        "src/lzio.c",
        "src/lzio.h",
    ],
)

expand_template(
    name = "generate_luaconf",
    out = "luaconf.h",
    template = "src/luaconf.h",
    substitutions = {
        "/usr/local/": "build/luarocks/"
    },
)
